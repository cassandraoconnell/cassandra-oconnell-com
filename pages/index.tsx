import { MongoClient } from "mongodb";
import { InferGetServerSidePropsType } from "next";
import Head from "next/head";
import { Camera } from "@/components/Camera/Camera";
import { History } from "@/scenes/History/History";
import { Introduction } from "@/scenes/Introduction/Introduction";
import { Skills } from "@/scenes/Skills/Skills";
import { Experience, Timeline } from "@/types/Timeline";
import "@/style/global.css";

export default function Home({
  data,
}: InferGetServerSidePropsType<typeof getServerSideProps>) {
  const scenes = [];

  scenes.push(<Introduction key="introduction" />);

  if (data.timeline) {
    scenes.push(<History key="history" timeline={data.timeline} />);
  }

  scenes.push(<Skills key="skills" />);

  return (
    <>
      <Head>
        <title>{"Cassandra O'Connell"}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />

        <link
          rel="icon"
          href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>ðŸ‘‹</text></svg>"
        />
      </Head>
      <Camera scenes={scenes} />
    </>
  );
}

export const getServerSideProps = async () => {
  const uri = process.env.MONGO_DB_CONNECTION_STRING;
  let timeline: Timeline | null = null;

  if (uri) {
    const client = new MongoClient(uri);

    try {
      const database = client.db("timeline");

      const experiences = await database
        .collection<Experience>("experiences")
        .find({}, { sort: { start: -1 } })
        .toArray();

      timeline = {
        experiences: experiences.map(({ _id, ...experience }) => experience),
      };
    } catch (error) {
      // TODO - log somewhere
    } finally {
      await client.close();
    }
  }

  return {
    props: {
      data: {
        timeline,
      },
    },
  };
};
